version: "2"

services:
  kafka-consumer:
    build: .
    depends_on:
      - kafka
      - postgres
      - web
    networks:
      - kafka_default
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "python3 -c \"import socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect(('kafka', 9092))\""]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  kafka:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - kafka_default
    restart: on-failure

  postgres:

volumes:
  kafka_data:
    driver: local

networks:
  kafka_default:
    name: kafka_default
    driver: bridge
